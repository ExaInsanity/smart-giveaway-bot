buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

plugins {
    id "org.sonarqube" version "3.0"
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    // Spring
    id "org.springframework.boot" version "2.4.1"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

group "pink.zak"
version "0.1.0"

sourceCompatibility = 15
targetCompatibility = 15

allprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url("https://repo.codemc.org/repository/maven-public/") }
        maven { url("https://oss.sonatype.org/content/repositories/snapshots/") }
        maven { url("https://jitpack.io") }
    }

    dependencies {
        implementation("com.google.guava:guava:30.1-jre")
    }

    tasks.withType(JavaCompile).all {
        options.compilerArgs += ["--enable-preview"]
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":discord")
    implementation project(":api")
}

shadowJar {
    manifest {
        attributes "Class-Path": "pink.zak.giveawaybot",
                "Main-Class": "pink.zak.giveawaybot.Main",
                "Specification-Title": "JDA",
                "Specification-Version": "4.2.0_216",
                "Specification-Vendor": "DV8FromTheWorld",
                "Implementation-Title": "SmartGiveaways Bot",
                "Implementation-Version": this.version,
                "Implementation-Vendor": "SmartGiveaways"
    }
}

test {
    useJUnitPlatform()
}

task depsize {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << "Total dependencies size:".padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
                .each {
                    out << "${it.name}".padRight(45)
                    out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
                }
        println(out)
    }
}
